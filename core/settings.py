"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from django.contrib.messages import constants as messages
from pathlib import Path
from decouple import config #! import to hide important detail
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = config('DEBUG', default=False, cast=bool)


# ALLOWED_HOSTS = ['192.168.8.104', 'localhost', '127.0.0.1', '*']



# Application definition
# Django Default Apps
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# Third-Party Apps
THIRD_PARTY_APPS = [
    'debug_toolbar',
    'tailwind',
    # 'django_countries',
    
]

# Project Theme
THEME_APPS = [
    'theme',
]

# Project-Specific Apps
PROJECT_APPS = [
    'app.common',
    'app.account',
    'app.student',
    'app.admission',
    'app.fee',
    'app.employee',
    'app.payroll',
    'app.inventory',
    'app.finance',
    'app.attendance',
    'app.academic',
    'app.assignment',
    'app.grade',
    'app.resource',
    'app.communication',
]

# Combine all app lists into INSTALLED_APPS
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + THEME_APPS + PROJECT_APPS
MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}
TAILWIND_APP_NAME = 'theme'
INTERNAL_IPS = [
    "127.0.0.1",
]   
NPM_BIN_PATH = "C:/Program Files/nodejs/npm.cmd"
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 'app.account.middleware.LoginRequiredMiddleware',
    
]
#Debug Toolbar configuration for development 
INTERNAL_IPS = ['127.0.0.1']

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    
     'default': {
         'ENGINE': 'django.db.backends.sqlite3',
         'NAME': BASE_DIR / 'db.sqlite3',
     },
   # 'default': {
   #     'ENGINE': 'django.db.backends.mysql',
   #     'NAME': config('DB_NAME'),
   #     'USER': config('DB_USER'),
   #     'PASSWORD': config('DB_PASSWORD'),
   #     'HOST': config('DB_HOST'),
   #     'PORT': config('DB_PORT', cast=int),
   #     'OPTIONS': {
   #         'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
   #     }

   # }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

AUTH_USER_MODEL = 'account.CustomUser'

STATIC_URL = '/static/'
STATICFILES_DIRS=[
    BASE_DIR/'static'
]
# STATIC_ROOT = BASE_DIR / 'staticfiles'



# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



#! Base directory for storing media files
MEDIA_ROOT=os.path.join(BASE_DIR,'media')
#! URL for accessing media files
MEDIA_URL= '/media/'



#! this line of help to configor the console base email request sending 
FRONTEND_URL=config('FRONTEND_URL','default_user')
# EMAIL_HOST_USER=config('EMAIL_HOST_USER', 'default_email@gmail.com')
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST =config('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT =config('EMAIL_PORT', 587)
EMAIL_USE_TLS =config('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER =config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD =config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

#!! Print emails to the console in debug mode

# if DEBUG:
#     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# else:
#     EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Token Settings (Optional Customizations)
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
}


LOGIN_REDIRECT_URL = 'redirect_to_dashboard'
LOGIN_URL = 'login'



AUTHENTICATION_BACKENDS = [
    'app.account.backends.EmailOrUsernameBackend',  # Replace 'app.account' with your app name
    'django.contrib.auth.backends.ModelBackend',  # Keep the default backend
]